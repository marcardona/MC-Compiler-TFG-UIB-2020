
package userInterface;

import data.Data;
import java.io.File;
import javax.swing.filechooser.FileFilter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author MarCardona
 */
public class StarterPage extends javax.swing.JFrame {

    /**
     * Datos del proyecto.
     */
    private Data data;

    /**
     * tarterPage.
     * Crea un nuevo form de página inicial del programa.
     * @param data
     */
    public StarterPage(Data data) {
        this.data = data;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createProjectButton = new javax.swing.JButton();
        openProjectButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        createProjectButton.setText("Nuevo proyecto");
        createProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProjectButtonActionPerformed(evt);
            }
        });

        openProjectButton.setText("Abrir Proyecto");
        openProjectButton.setToolTipText("");
        openProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openProjectButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        jLabel1.setText("Bienvenido a MC Compiler");

        jLabel2.setText("Por favor, selecciona una opción para continuar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(openProjectButton)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(createProjectButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createProjectButton)
                    .addComponent(openProjectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openProjectButtonActionPerformed
        this.setVisible(false);
        // choose the project directory
        String dirPath = chooseProjectDirectory();
        // choose the script
        if (!dirPath.equals("")) {
            // buscar el mkfile
            File mkFile = new File(data.getProjectPath()+"/markfile.mccompiler");
            if (!mkFile.exists()) {
                JOptionPane.showMessageDialog(null, "This is not a project directory.", "Project Folder", JOptionPane.INFORMATION_MESSAGE);
                openProjectButtonActionPerformed(evt);
            } else {
                data.setScriptActual(data.getNombreProyecto()+".tc");
                File entDir = new File(data.getProjectPath()+"/build/files");
                data.setNombreVectorEnt(entDir.list()[0]);
                this.dispose();
                UserInterface ui = new UserInterface(data);
                ui.showUI();
            }
        } else {
            this.setVisible(true);
        }
    }//GEN-LAST:event_openProjectButtonActionPerformed

    private void createProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProjectButtonActionPerformed
        CreateProject cp = new CreateProject();
        cp.start();
        this.dispose();
    }//GEN-LAST:event_createProjectButtonActionPerformed

    /**
     * Mostrar interfaz.
     */
    public void startUI() {
        this.setLocationRelativeTo(null);
        this.pack();
        this.setVisible(true);
    }

    /**
     * Escoger directorio.
     * Escoger el durectorio de un proyeto para abrirlo.
     * @return directorio
     */
    private String chooseProjectDirectory() {
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnValue = fc.showOpenDialog(StarterPage.this);
        String path = "";
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            path = fc.getSelectedFile().getAbsolutePath();
            data.setCurrentProjectPath(path);
            data.setCurrentProjectName(fc.getSelectedFile().getName());
        }
        return path;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createProjectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton openProjectButton;
    // End of variables declaration//GEN-END:variables
}
