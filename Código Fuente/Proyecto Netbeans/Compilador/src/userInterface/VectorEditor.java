package userInterface;

import data.AccesoFichero;
import data.Data;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;

/**
 *
 * @author Mar√≠a del Mar Cardona
 */
public class VectorEditor extends javax.swing.JFrame {

    /**
     * Datos del proyecto.
     */
    private final Data data;
    /**
     * Interfaz de usuario padre.
     */
    private final UserInterface parent;

    /**
     * Crear vectorEditor. Crea un nuevo form para editar el vector de entrada.
     *
     * @param data
     * @param parent
     * @throws java.io.IOException
     */
    public VectorEditor(Data data, UserInterface parent) throws IOException {
        this.data = data;
        this.parent = parent;
        initComponents();
        loadFile();
        setComponents();

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                dispose();
                parent.setEnabled(true);
                parent.toFront();
            }
        });
    }

    /**
     * Mostrar interfaz.
     */
    public void start() {
        this.setPreferredSize(new Dimension(550,150));
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.pack();
        this.setVisible(true); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vectorEditor = new javax.swing.JTextPane();
        CancelVectorButton = new javax.swing.JButton();
        SaveVectorButton = new javax.swing.JButton();
        vectorNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        vectorEditor.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(vectorEditor);

        CancelVectorButton.setText("Cancelar");
        CancelVectorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelVectorButtonActionPerformed(evt);
            }
        });

        SaveVectorButton.setText("Guardar");
        SaveVectorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveVectorButtonActionPerformed(evt);
            }
        });

        vectorNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vectorNameLabel.setText("Vector");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 191, Short.MAX_VALUE)
                        .addComponent(CancelVectorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveVectorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(vectorNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(vectorNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelVectorButton)
                    .addComponent(SaveVectorButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelVectorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelVectorButtonActionPerformed
        this.dispose();
        parent.setEnabled(true);
        parent.toFront();
    }//GEN-LAST:event_CancelVectorButtonActionPerformed

    private void SaveVectorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveVectorButtonActionPerformed
        String t = this.vectorEditor.getText();
        boolean save = true;
        if (t.toCharArray().length > 1024) {
            // sobran bytes -> recortar y guardar
            String message = "The entry vector has more than 1KB of data.\n"
                    + "The vector will be saved removing the latest remaining characters.\n"
                    + "Are you sure?";
            int answer = JOptionPane.showConfirmDialog(this, message, "Vector too long", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                t = t.substring(0, 1024);
            } else {
                save = false;
            }
        } else if (t.toCharArray().length < 1024) {
            // rellenar con '#' hasta 1K
            String message = "The entry vector has less than 1KB of data.\n"
                    + "The vector will be saved adding the latest remaining '#' characters.\n"
                    + "Are you sure?";
            int answer = JOptionPane.showConfirmDialog(this, message, "Vector too short", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (answer == JOptionPane.YES_OPTION) {
                t = t.concat((new String(new char[1024 - t.toCharArray().length])).replace('\0', '#'));
            } else {
                save = false;
            }
        }

        if (save) {
            // guardar y dispose
            AccesoFichero af = new AccesoFichero();
            File vectorFile = new File(data.getProjectPath() + "/build/files/" + data.getNombreVectorEnt());
            af.writeFile(vectorFile, t);
            this.dispose();
            parent.setEnabled(true);
            parent.toFront();
        }
    }//GEN-LAST:event_SaveVectorButtonActionPerformed

    /**
     * Cargar en el editor de texto el vector. El directorio del vector es:
     * directory/build/files/vectorname.
     */
    private void loadFile() throws IOException {
        AccesoFichero af = new AccesoFichero();
        String content = af.readFile(data.getProjectPath() + "/build/files/" + data.getNombreVectorEnt());
        vectorEditor.setText(content);
    }

    /**
     * Establecer componentes.
     */
    private void setComponents() {
        jScrollPane1.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        vectorNameLabel.setHorizontalAlignment(SwingConstants.CENTER);
        vectorNameLabel.setText(data.getNombreVectorEnt());
        vectorEditor.setCaretPosition(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelVectorButton;
    private javax.swing.JButton SaveVectorButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane vectorEditor;
    private javax.swing.JLabel vectorNameLabel;
    // End of variables declaration//GEN-END:variables
}
