00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 03/09/2020 15:03:34

00000000                             1  *------------------------------------------------------------
00000000                             2  * Title      : CODIGO ENSAMBLADOR DE prova_generar_paraula 
00000000                             3  * Date       : Thu Sep 03 15:03:27 CEST 2020
00000000                             4  * Description: Codigo ensamblador
00000000                             5  *------------------------------------------------------------
00000000                             6  
00000000                             7  *************************************************************
00000000                             8  *                             MACROS                         *
00000000                             9  *************************************************************
00000000                            10      INCLUDE "macros/macros.X68"                                   
00000000                            11  
00000000                            12  
00000000                            13  LOAD_ENT    MACRO
00000000                            14  * Macro to reads 1 word from the vector address             
00000000                            15  * Parameters:     \1: ent file adress                      
00000000                            16  *                 \2: ent vector adress                    
00000000                            17  * Modifies  : D0, D1, D2, D3, A1                            
00000000                            18  * Always executed after TRAP 51, 52 or 55                   
00000000                            19  *-----------------------------------------------------------
00000000                            20      ; open existing file                                    
00000000                            21      LEA.L   \1,A1                                          
00000000                            22      MOVE.L  #51,D0                                          
00000000                            23      TRAP    #15                                             
00000000                            24      ; read file                                             
00000000                            25      CLR.L   D2                                              
00000000                            26      CLR.L   D3                                              
00000000                            27      LEA.L   \2,A1                                          
00000000                            28      WHILE.W #1024 <GT> D3 DO.S                              
00000000                            29          MOVE.W  D3,D2                                       
00000000                            30          ; set cursor                                        
00000000                            31          MOVE.L  #55,D0                                      
00000000                            32          TRAP    #15                                         
00000000                            33          MOVE.W  #0,(A1)                                     
00000000                            34          MOVE.L  #1,D2                                       
00000000                            35          MOVE.L  #53,D0                                      
00000000                            36          TRAP    #15                                         
00000000                            37          ADD.W   #1,D3                                       
00000000                            38          ADD.L   #2,A1                                       
00000000                            39      ENDW                                                    
00000000                            40      ; close file                                            
00000000                            41      MOVE.L  #50,D0                                          
00000000                            42      TRAP    #15                                             
00000000                            43      ENDM                                                    
00000000                            44  
00000000                            45  SAVE_VEC     MACRO
00000000                            46  * Macro to reads 1 word from the vector address             
00000000                            47  * Parameters:     \1: ent file adress                      
00000000                            48  *                 \2: ent vector adress* Modifies  : D0, D1, D2, A1                                
00000000                            49  * Always executed after TRAP 51, 52 or 55                   
00000000                            50  *-----------------------------------------------------------
00000000                            51     CLR.L  D3                                                
00000000                            52      ; open file                                             
00000000                            53      LEA.L   \1,A1                                          
00000000                            54      MOVE.L  #52,D0                                          
00000000                            55      TRAP    #15                                             
00000000                            56      LEA.L   \2,A1                                          
00000000                            57      WHILE.W #1023 <GT> D3 DO.S                              
00000000                            58          MOVE.L  D3,D2                                       
00000000                            59          ; set cursor                                        
00000000                            60          MOVE.L  #55,D0                                      
00000000                            61          TRAP    #15                                         
00000000                            62          ; write file                                        
00000000                            63          MOVE.L  #1,D2                                       
00000000                            64          MOVE.L  #54,D0                                      
00000000                            65          TRAP    #15                                         
00000000                            66          ; aumentar el cursor y el vector                    
00000000                            67          ADD.L   #1,D3                                       
00000000                            68          ADD.L   #2,A1                                       
00000000                            69      ENDW                                                    
00000000                            70      ; close file                                            
00000000                            71      MOVE.L  #50,D0                                          
00000000                            72      TRAP    #15                                             
00000000                            73      ENDM                                                    
00000000                            74  
00000000                            75  INIT_VECTOR     MACRO
00000000                            76  * Macro to load 1024 # in a vector.                         
00000000                            77  * Parameters:     \1: vector adress                        
00000000                            78  * Modifies  : D0, D1, D2, A1                                
00000000                            79  *-----------------------------------------------------------
00000000                            80     CLR.L   D0                                               
00000000                            81     WHILE.W D0 <LE> #2048 DO.S                               
00000000                            82         LEA.L   \1,A1                                       
00000000                            83         ADD.L   D0,A1                                        
00000000                            84         MOVE.W  #$2300,(A1)                                  
00000000                            85         ADD.W   #2,D0                                        
00000000                            86     ENDW                                                     
00000000                            87     ENDM                                                    
00000000                            88  
00000000                            89  DRETA   MACRO                                    
00000000                            90  * Macro to increase in 1 word the cursor of the file.       
00000000                            91  * Parameters: \1: vector cursor name                       
00000000                            92  * Modifies  : D0, A1                                        
00000000                            93  *-----------------------------------------------------------
00000000                            94     CLR.L   D0                                               
00000000                            95     LEA.L   \1,A1                                           
00000000                            96     MOVE.L  (A1),D0                                          
00000000                            97     ADD.L   #2,D0                                            
00000000                            98     MOVE.L  D0,(A1)                                          
00000000                            99     ENDM                                                     
00000000                           100  
00000000                           101  ESQUERRA    MACRO                                    
00000000                           102  * Macro to increase in 1 unit the cursor of the file.       
00000000                           103  * Parameters: \1: vector cursor name                       
00000000                           104  * Modifies  : D0, A1                                        
00000000                           105  *-----------------------------------------------------------
00000000                           106     CLR.L   D0                                               
00000000                           107     LEA.L   \1,A1                                           
00000000                           108     MOVE.L  (A1),D0                                          
00000000                           109     SUB.L   #2,D0                                            
00000000                           110     MOVE.L  D0,(A1)                                          
00000000                           111     ENDM                                                     
00000000                           112  
00000000                           113  READ_VECTOR     MACRO
00000000                           114  * Macro to reads 1 word from the vector address             
00000000                           115  * Parameters: \1: vector name                              
00000000                           116  *             \2: simbol desp                              
00000000                           117  *             \3: vector cursor                            
00000000                           118  * Modifies  : D0, D1, D2, A1                                
00000000                           119  * Always executed after TRAP 51, 52 or 55                   
00000000                           120  *-----------------------------------------------------------
00000000                           121     LEA.L    \3,A1                                          
00000000                           122     MOVE.L   (A1),D0                                         
00000000                           123     IF.B    D0 <LT> #0 THEN.S                                
00000000                           124          MOVE.L #'#',D0                                      
00000000                           125     ELSE                                                     
00000000                           126          LEA.L    \1,A1                                     
00000000                           127          ADD.L    D0,A1                                      
00000000                           128          MOVE.W   (A1),D0                                    
00000000                           129          ROR.W    #8,D0                                      
00000000                           130     ENDI                                                     
00000000                           131     MOVE.W   D0,\2(A7)                                      
00000000                           132     ENDM                                                     
00000000                           133  
00000000                           134  READ_SIMBOL     MACRO
00000000                           135  * Macro to read.                                            
00000000                           136  * Parameters: \1: Param1   ;Desplazamiento del origen      
00000000                           137  *             \2: Param2   ;Desplazamiento del destino     
00000000                           138  * Modifies  : D0, A1                                        
00000000                           139  *-----------------------------------------------------------
00000000                           140     CLR.L   D0                                               
00000000                           141     MOVE.L  \2, A1                                          
00000000                           142     MOVE.W  (A1),D0                                          
00000000                           143     MOVE.W  D0, \1(A7)                                      
00000000                           144     ENDM                                                     
00000000                           145  
00000000                           146  ASIGN_VALUE_SIMBOL MACRO                                    
00000000                           147  * Macro to assign value to simbol.                          
00000000                           148  * Parameters: \1: Param1   ;DESP                           
00000000                           149  *             \2: Param2   ;VALOR                          
00000000                           150  * Modifies  : D0                                            
00000000                           151  *-----------------------------------------------------------
00000000                           152     CLR.L D0                                                 
00000000                           153     MOVE.W \2, D0                                           
00000000                           154     MOVE.W D0, \1(A7)                                       
00000000                           155     ENDM                                                     
00000000                           156  
00000000                           157  ASIGN_VALUE_ACCEPTA MACRO                                   
00000000                           158  * Macro to assign value to simbol.                          
00000000                           159  * Parameters: \1: value                                    
00000000                           160  *             \2: accepta address                          
00000000                           161  * Modifies  : D0                                            
00000000                           162  *-----------------------------------------------------------
00000000                           163     CLR.L   D0                                               
00000000                           164     LEA     \2,A1                                           
00000000                           165     MOVE.W  \1,D0                                           
00000000                           166     MOVE.W  D0,(A1)                                          
00000000                           167     ENDM                                                     
00000000                           168  
00000000                           169  ASIGN_SIMBOL_SIMBOL MACRO                                   
00000000                           170  * Macro to assign simbol to simbol.                         
00000000                           171  * Parameters: \1: desp simbol param 1                      
00000000                           172  *             \2: desp simbol dest                         
00000000                           173  * Modifies  : D0                                            
00000000                           174  *-----------------------------------------------------------
00000000                           175     CLR.L   D0                                               
00000000                           176     MOVE.W  \1(A7),D0                                       
00000000                           177     MOVE.W  D0,\2(A7)                                       
00000000                           178     ENDM                                                     
00000000                           179  
00000000                           180  ASIGN_SIMBOL_ACCEPTA MACRO                                  
00000000                           181  * Macro to assign simbol to accepta.                        
00000000                           182  * Parameters: \1: desp simbol param 1                      
00000000                           183  *             \2: accepta address                          
00000000                           184  * Modifies  : D0,A1                                         
00000000                           185  *-----------------------------------------------------------
00000000                           186     CLR.L   D0                                               
00000000                           187     LEA     \2,A1                                           
00000000                           188     MOVE.W  \1(A7),D0                                       
00000000                           189     MOVE.W  D0,(A1)                                          
00000000                           190     ENDM                                                     
00000000                           191  
00000000                           192  ASIGN_ACCEPTA_SIMBOL MACRO                                  
00000000                           193  * Macro to assign accepta to simbol.                        
00000000                           194  * Parameters: \1: desp simbol param 1                      
00000000                           195  *             \2: accepta address                          
00000000                           196  * Modifies  : D0,A1                                         
00000000                           197  *-----------------------------------------------------------
00000000                           198     CLR.L   D0                                               
00000000                           199     LEA     \2,A1                                           
00000000                           200     MOVE.W  (A1),\1(A7)                                     
00000000                           201     ENDM                                                     
00000000                           202  
00000000                           203  ASIGN_VALUE_VECTOR MACRO                                    
00000000                           204  * Macro to assign value to vector.                          
00000000                           205  * Parameters: \1: value                                    
00000000                           206  *             \2: vector address                           
00000000                           207  *             \3: cursor address                           
00000000                           208  * Modifies  : D0,A1                                         
00000000                           209  *-----------------------------------------------------------
00000000                           210     LEA     \3,A1                                           
00000000                           211     MOVE.L  (A1),D0                                          
00000000                           212     LEA     \2,A1                                           
00000000                           213     ADD.L   D0,A1                                            
00000000                           214     MOVE.W  \1,D0                                           
00000000                           215     ROR.W   #8,D0                                            
00000000                           216     MOVE.W  D0,(A1)                                          
00000000                           217     ENDM                                                     
00000000                           218  
00000000                           219  ASIGN_SIMBOL_VECTOR MACRO                                   
00000000                           220  * Macro to assign simbol to vector.                         
00000000                           221  * Parameters: \1: simbol desp                              
00000000                           222  *             \2: vector address                           
00000000                           223  *             \3: vector cursor                            
00000000                           224  * Modifies  : D0,A1                                         
00000000                           225  *-----------------------------------------------------------
00000000                           226     LEA     \3,A1                                           
00000000                           227     MOVE.L  (A1),D0                                          
00000000                           228     LEA     \2,A1                                           
00000000                           229     ADD.L   D0,A1                                            
00000000                           230     MOVE.W  \1(A7),D0                                       
00000000                           231     ROR.W   #8,D0                                            
00000000                           232     MOVE.W  D0,(A1)                                          
00000000                           233     ENDM                                                     
00000000                           234  
00000000                           235  COMP_IGUAL_SIMBOL   MACRO
00000000                           236  * Macro to compare.                          
00000000                           237  * Parameters: \1: Param1
00000000                           238  *             \2: Param2
00000000                           239  *             \3: Param3 
00000000                           240  
00000000                           241  * Modifies  : D0
00000000                           242  *             D1
00000000                           243  *-----------------------------------------------------------
00000000                           244          CLR.L D0
00000000                           245          CLR.L D1
00000000                           246  * COMPARAR D0 Y D1
00000000                           247          MOVE.W \1(A7), D0
00000000                           248          ; mirar que d0 es correcto
00000000                           249          IF.B   D0 <EQ> #$FF THEN.S
00000000                           250             AND.W   #$FF00,D0
00000000                           251             ROR.L   #8,D0
00000000                           252          ENDI
00000000                           253          MOVE.W \2(A7), D1
00000000                           254          ; mirar que d1 es correcto
00000000                           255          IF.B   D1 <EQ> #$FF THEN.S
00000000                           256             AND.W   #$FF00,D1
00000000                           257             ROR.L   #8,D1
00000000                           258          ENDI
00000000                           259  * SI SON IGUALES GUARDAR UN 1 (BOOLEAN TRUE)
00000000                           260          CMP.W D0, D1
00000000                           261          BNE igual_int_falso\@
00000000                           262          MOVE.W  #1,D0
00000000                           263          BRA igual_asig_int_true\@
00000000                           264  
00000000                           265  * SI SON DIFERENTES GUARDAR UN 0 (BOOLEAN FALSE)
00000000                           266  igual_int_falso\@
00000000                           267          MOVE.W  #0,D0
00000000                           268  igual_asig_int_true\@        
00000000                           269          MOVE.W D0, \3(A7)
00000000                           270          ENDM
00000000                           271  
00000000                           272  COMP_DIF_SIMBOL     MACRO
00000000                           273  * Macro to compare.                          
00000000                           274  * Parameters: \1: Param1
00000000                           275  *             \2: Param2
00000000                           276  *             \3: Param3 
00000000                           277  
00000000                           278  * Modifies  : D0
00000000                           279  *             D1
00000000                           280  *-----------------------------------------------------------
00000000                           281          CLR.L D0
00000000                           282          CLR.L D1
00000000                           283  * COMPARAR D0 Y D1
00000000                           284          MOVE.W \1(A7), D0
00000000                           285          ; mirar que d0 es correcto
00000000                           286          IF.B   D0 <EQ> #$FF THEN.S
00000000                           287             AND.W   #$FF00,D0
00000000                           288             ROR.L   #8,D0
00000000                           289          ENDI
00000000                           290          MOVE.W \2(A7), D1
00000000                           291          ; mirar que d0 es correcto
00000000                           292          IF.B   D1 <EQ> #$FF THEN.S
00000000                           293             AND.W   #$FF00,D1
00000000                           294             ROR.L   #8,D1
00000000                           295          ENDI
00000000                           296  * SI SON iguales GUARDAR UN 0 (BOOLEAN FALSE)
00000000                           297          CMP.W D0, D1
00000000                           298          BNE dif_int_falso\@
00000000                           299          MOVE.W  #0,D0
00000000                           300          BRA dif_asig_int_true\@
00000000                           301  
00000000                           302  * SI SON DIFERENTES GUARDAR UN 1 (BOOLEAN TRUE)
00000000                           303  dif_int_falso\@
00000000                           304          MOVE.W  #1,D0
00000000                           305          
00000000                           306  dif_asig_int_true\@        
00000000                           307          MOVE.W D0, \3(A7)
00000000                           308          ENDM
00000000                           309  
00000000                           310  ; -----------------------------------------------------------------------------
00000000                           311  EMPILA      MACRO
00000000                           312  ; Insertar un simbolo en la pila.
00000000                           313  * Parameters: \1: desplazamiento del simbolo
00000000                           314  
00000000                           315  * Modifies  : D0,A0
00000000                           316  ; -----------------------------------------------------------------------------
00000000                           317              MOVE.W   \1(A7),D0
00000000                           318              MOVE.W   D0,-(A0)
00000000                           319              ENDM
00000000                           320  
00000000                           321  ; -----------------------------------------------------------------------------
00000000                           322  CIM      MACRO
00000000                           323  ; Coger el símbolo de la cima de la pila.
00000000                           324  * Parameters: \1: desplazamiento del simbolo
00000000                           325  
00000000                           326  * Modifies  : D0
00000000                           327  ; -----------------------------------------------------------------------------
00000000                           328              MOVE.W   (A0),\1(A7)
00000000                           329              ENDM
00000000                           330  
00000000                           331  ; -----------------------------------------------------------------------------
00000000                           332  DESEMPILA      MACRO
00000000                           333  ; Eliminar un simbolo de la pila.
00000000                           334  
00000000                           335  * Modifies  : A0
00000000                           336  ; -----------------------------------------------------------------------------
00000000                           337              ADD.L    #2,A0
00000000                           338              ENDM
00000000                           339  
00000000                           340  ; -----------------------------------------------------------------------------
00000000                           341  LOAD_STACK      MACRO
00000000                           342  ; Prepara la pila en A0.
00000000                           343  * Parameters: \1: direccion de la pila
00000000                           344  
00000000                           345  * Modifies  : A0
00000000                           346  ; -----------------------------------------------------------------------------
00000000                           347              LEA.L  \1, A0
00000000                           348              ADD.L   #2, A0
00000000                           349              ENDM
00000000                           350  
00000000                           351  BUIDA   MACRO
00000000                           352  * Macro para saber si la pila esta vacia.                  
00000000                           353  * Parameters: \1: Dirección de la pila (cuando esta a 0)
00000000                           354  *             \2: Simbolo donde se guarda el resultado
00000000                           355  
00000000                           356  * Modifies  : D0,A1
00000000                           357  *-----------------------------------------------------------
00000000                           358          LEA.L        \1,A1
00000000                           359  * COMPARAR A0 Y A1
00000000                           360  * SI SON IGUALES GUARDAR UN 1 (BOOLEAN TRUE)
00000000                           361          CMP.L A0,A1
00000000                           362          BNE igual_int_falso\@
00000000                           363          MOVE.W  #1,D0
00000000                           364          BRA igual_asig_int_true\@
00000000                           365  
00000000                           366  * SI SON DIFERENTES GUARDAR UN 0 (BOOLEAN FALSE)
00000000                           367  igual_int_falso\@
00000000                           368          MOVE.W  #0,D0
00000000                           369  igual_asig_int_true\@        
00000000                           370          MOVE.W D0, \2(A7)
00000000                           371          ENDM
00000000                           372  
00000000                           373  NOBUIDA     MACRO
00000000                           374  * Macro para saber si la pila esta vacia.                  
00000000                           375  * Parameters: \1: Dirección de la pila (cuando esta a 0)
00000000                           376  *             \2: Simbolo donde se guarda el resultado
00000000                           377  
00000000                           378  * Modifies  : D0,A1
00000000                           379  *-----------------------------------------------------------
00000000                           380          LEA.L        \1,A1
00000000                           381  * COMPARAR A0 Y A1
00000000                           382  * SI SON DIFERENTES GUARDAR UN 1 (BOOLEAN TRUE)
00000000                           383          CMP.L A0,A1
00000000                           384          BEQ igual_int_falso\@
00000000                           385          MOVE.W  #1,D0
00000000                           386          BRA igual_asig_int_true\@
00000000                           387  
00000000                           388  * SI SON DIFERENTES GUARDAR UN 0 (BOOLEAN FALSE)
00000000                           389  igual_int_falso\@
00000000                           390          MOVE.W  #0,D0
00000000                           391  igual_asig_int_true\@        
00000000                           392          MOVE.W D0, \2(A7)
00000000                           393          ENDM
00000000                           394  
00000000                           395  AND_SIMBOL  MACRO
00000000                           396  * Operación AND entre dos símbolos.                  
00000000                           397  * Parameters: \1: Desplazamiento del parametro 1
00000000                           398  *             \2: Desplazamiento del parametro 2
00000000                           399  *             \3: Desplazamiento del parametro resultado
00000000                           400  
00000000                           401  * Modifies  : D0
00000000                           402  *-----------------------------------------------------------
00000000                           403              MOVE.W   \1(A7),D0
00000000                           404              AND.W    \2(A7),D0
00000000                           405              MOVE.W   D0,\3(A7)
00000000                           406              ENDM
00000000                           407  
00000000                           408  OR_SIMBOL   MACRO
00000000                           409  * Operación OR entre dos símbolos.                  
00000000                           410  * Parameters: \1: Desplazamiento del parametro 1
00000000                           411  *             \2: Desplazamiento del parametro 2
00000000                           412  *             \3: Desplazamiento del parametro resultado
00000000                           413  
00000000                           414  * Modifies  : D0
00000000                           415  *-----------------------------------------------------------
00000000                           416              MOVE.W   \1(A7),D0
00000000                           417              OR.W    \2(A7),D0
00000000                           418              MOVE.W   D0,\3(A7)
00000000                           419              ENDM
00000000                           420  
00000000                           421  ASK_RAMIF    MACRO
00000000                           422  * Establece si el programa esta en el main o en una rama     
00000000                           423  * Parameters:     \1: numero de ramificacion                
00000000                           424  *                 \2: numero de ramas                       
00000000                           425  * Modifies  : D0, D1, A1, A2, A3                             
00000000                           426  *----------------------------------------------------------- 
00000000                           427      ; separador
00000000                           428      MOVE.L  #13,D0
00000000                           429      MOVE.L  #separador,A1
00000000                           430      TRAP    #15
00000000                           431      
00000000                           432      ; pregunta p1
00000000                           433      MOVE.L  #17,D0
00000000                           434      MOVE.L  #linea1,A1
00000000                           435      MOVE.L  \1,D1               ; numero de ramificacion
00000000                           436      TRAP    #15
00000000                           437      
00000000                           438      MOVE.L  #6,D0
00000000                           439      MOVE.L  #13,D1 ; CR
00000000                           440      TRAP    #15
00000000                           441      
00000000                           442      MOVE.L  #6,D0
00000000                           443      MOVE.L  #10,D1 ; LF
00000000                           444      TRAP    #15
00000000                           445      
00000000                           446      ;pregunta p2
00000000                           447      MOVE.L  #17,D0
00000000                           448      MOVE.L  #linea2,A1
00000000                           449      MOVE.L  \2,D1               ; numero de rama
00000000                           450      TRAP    #15
00000000                           451      
00000000                           452      ; pregunta p3
00000000                           453      MOVE.L  #18,D0
00000000                           454      MOVE.L  #dospuntos,A1
00000000                           455      TRAP    #15
00000000                           456      
00000000                           457      ; separador
00000000                           458      MOVE.L  #13,D0
00000000                           459      MOVE.L  #separador,A1
00000000                           460      TRAP    #15
00000000                           461      ENDM
00000000                           462  -------------------- end include --------------------
00000000                           463                                                                
00000000                           464                                                                
00000000                           465                                                                
00000000                           466  *************************************************************
00000000                           467  *                         MAIN PROGRAM                      *
00000000                           468  *************************************************************
00000000                           469  
00002000                           470      ORG    $2000
00002000                           471  START:                  ; first instruction of program
00002000                           472  
00002000                           473  ; cerrar todos los ficheros (aconsejado)                     
00002000                           474  ; close file                                            
00002000  7032                     475      MOVE.L  #50,D0                                          
00002002  4E4F                     476      TRAP    #15                                              
00002004                           477  ;   cargar el vector de entrada 
00002004                           478m     LOAD_ENT    ent, entprova_generar_paraula
00002004                           479m * MACRO TO READS 1 WORD FROM THE VECTOR ADDRESS             
00002004                           480m * PARAMETERS:     \1: ENT FILE ADRESS                      
00002004                           481m *                 \2: ENT VECTOR ADRESS                    
00002004                           482m * MODIFIES  : D0, D1, D2, D3, A1                            
00002004                           483m * ALWAYS EXECUTED AFTER TRAP 51, 52 OR 55                   
00002004                           484m *-----------------------------------------------------------
00002004                           485m     ; OPEN EXISTING FILE                                    
0000200E                           486m     ; READ FILE                                             
00002020                           487m         ; SET CURSOR                                        
00002034                           488m     ; CLOSE FILE                                            
00002038                           489m     INIT_VECTOR continuigenerar_paraula
00002038                           490m * MACRO TO LOAD 1024 # IN A VECTOR.                         
00002038                           491m * PARAMETERS:     \1: VECTOR ADRESS                        
00002038                           492m * MODIFIES  : D0, D1, D2, A1                                
00002038                           493m *-----------------------------------------------------------
00002050                           494  ;   instruccion start del programa 
00002050                           495  ;   c3d:        call_ - - 0 
00002050  4EB9 000020D2            496      JSR         P_PROVA_GENERAR_PARAULA
00002056                           497  
00002056                           498  FINALLY:;   imprimir valor de accepta 
00002056  43F9 00004004            499      LEA         acceptastr,A1 
0000205C  303C 000E                500      MOVE.W      #14,D0        
00002060  4E4F                     501      TRAP        #15           
00002062  4281                     502      CLR.L       D1            
00002064  43F9 00004000            503      LEA         accepta,A1    
0000206A  3211                     504      MOVE.W      (A1),D1       
0000206C  303C 0006                505      MOVE.W      #6,D0         
00002070  4E4F                     506      TRAP        #15           
00002072                           507m     SAVE_VEC    rentprova_generar_paraula, entprova_generar_paraula
00002072                           508m * MACRO TO READS 1 WORD FROM THE VECTOR ADDRESS             
00002072                           509m * PARAMETERS:     \1: ENT FILE ADRESS                      
00002072                           510m *                 \2: ENT VECTOR ADRESS* MODIFIES  : D0, D1, D2, A1                                
00002072                           511m * ALWAYS EXECUTED AFTER TRAP 51, 52 OR 55                   
00002072                           512m *-----------------------------------------------------------
00002074                           513m     ; OPEN FILE                                             
0000208C                           514m         ; SET CURSOR                                        
00002090                           515m         ; WRITE FILE                                        
00002096                           516m         ; AUMENTAR EL CURSOR Y EL VECTOR                    
0000209C                           517m     ; CLOSE FILE                                            
000020A0                           518m     SAVE_VEC    rcontinuigenerar_paraula, continuigenerar_paraula
000020A0                           519m * MACRO TO READS 1 WORD FROM THE VECTOR ADDRESS             
000020A0                           520m * PARAMETERS:     \1: ENT FILE ADRESS                      
000020A0                           521m *                 \2: ENT VECTOR ADRESS* MODIFIES  : D0, D1, D2, A1                                
000020A0                           522m * ALWAYS EXECUTED AFTER TRAP 51, 52 OR 55                   
000020A0                           523m *-----------------------------------------------------------
000020A2                           524m     ; OPEN FILE                                             
000020BA                           525m         ; SET CURSOR                                        
000020BE                           526m         ; WRITE FILE                                        
000020C4                           527m         ; AUMENTAR EL CURSOR Y EL VECTOR                    
000020CA                           528m     ; CLOSE FILE                                            
000020CE  FFFF FFFF                529      SIMHALT             ; halt simulator
000020D2                           530  ; c3d:  procedure_ - - 0 
000020D2                           531  
000020D2                           532  P_PROVA_GENERAR_PARAULA:
000020D2                           533  ;   c3d:    preamble_ - - 0 
000020D2                           534  
000020D2  9FFC 00000000            535      SUB.L   #0, A7
000020D8  598F                     536      SUB.L   #4, A7  ;BP
000020DA  2EBC 00000000            537      MOVE.L  #0, (A7) ;Todo 0
000020E0  2C4F                     538      MOVE.L  A7, A6 ;SP==A7
000020E2  9DFC 00000000            539      SUB.L   #0, A6  
000020E8                           540  ;   llamada a un subprograma 
000020E8                           541  ;   c3d:    call_ - - 1 
000020E8  2A4F                     542      MOVE.L  A7, A5      ;Preparamos la pila para añadir nuevo prmbl
000020EA  2E4E                     543      MOVE.L  A6, A7      
000020EC  2F0D                     544      MOVE.L  A5, -(A7)  ;BP anterior
000020EE  598F                     545      SUB.L #4, A7  ;Espacio para PC
000020F0  588F                     546      ADD.L #4, A7  ;Regresamos para poner el pc en el salto
000020F2  4EB9 0000210A            547      JSR P_GENERAR_PARAULA
000020F8                           548      ;volvemos de subrutina
000020F8  DFFC 00000000            549      ADD.L #0, A7 ;Botamos return
000020FE  2A5F                     550      MOVE.L (A7)+, A5 ;Cogemos BP
00002100  2C4F                     551      MOVE.L A7, A6  ;Dejamos A6 en la cima
00002102  2E4D                     552      MOVE.L A5, A7 ;Nos colocamos en el BP del metodo actual
00002104                           553  ;   c3d:    endProcedure_ - - 0 
00002104  2E4E                     554      MOVE.L  A6,A7        
00002106  588F                     555      ADD.L   #4, A7  ;nos situamos en PC para volver
00002108  4E75                     556      RTS
0000210A                           557  ; c3d:  procedure_ - - 1 
0000210A                           558  
0000210A                           559  P_GENERAR_PARAULA:
0000210A                           560  ;   c3d:    preamble_ - - 1 
0000210A                           561  
0000210A  9FFC 00000000            562      SUB.L   #0, A7
00002110  598F                     563      SUB.L   #4, A7  ;BP
00002112  2EBC 00000000            564      MOVE.L  #0, (A7) ;Todo 0
00002118  2C4F                     565      MOVE.L  A7, A6 ;SP==A7
0000211A  9DFC 0000000E            566      SUB.L   #14, A6  
00002120                           567  ; c3d: escriure_ 49 - 1 
00002120                           568m     ASIGN_VALUE_VECTOR #49,continuigenerar_paraula,continuigenerar_paraulacursor
00002120                           569m * MACRO TO ASSIGN VALUE TO VECTOR.                          
00002120                           570m * PARAMETERS: \1: VALUE                                    
00002120                           571m *             \2: VECTOR ADDRESS                           
00002120                           572m *             \3: CURSOR ADDRESS                           
00002120                           573m * MODIFIES  : D0,A1                                         
00002120                           574m *-----------------------------------------------------------
00002138                           575  ;   escribir etiqueta 
00002138                           576  ;   c3d: skip_ - - t_while_0_0 
00002138                           577  t_while_0_0:
00002138                           578  ;   c3d: llegir_ 1 - 1 
00002138                           579m     READ_VECTOR     continuigenerar_paraula, -4, continuigenerar_paraulacursor
00002138                           580m * MACRO TO READS 1 WORD FROM THE VECTOR ADDRESS             
00002138                           581m * PARAMETERS: \1: VECTOR NAME                              
00002138                           582m *             \2: SIMBOL DESP                              
00002138                           583m *             \3: VECTOR CURSOR                            
00002138                           584m * MODIFIES  : D0, D1, D2, A1                                
00002138                           585m * ALWAYS EXECUTED AFTER TRAP 51, 52 OR 55                   
00002138                           586m *-----------------------------------------------------------
0000215C  43F9 00006048            587      LEA.L   continuigenerar_paraulacursor,A1
00002162  2011                     588      MOVE.L  (A1),D0
00002164                           589      IF.L    D0 <LE> #-2 THEN.S 
0000216C                           590m         ASIGN_VALUE_ACCEPTA #'e', accepta
0000216C                           591m * MACRO TO ASSIGN VALUE TO SIMBOL.                          
0000216C                           592m * PARAMETERS: \1: VALUE                                    
0000216C                           593m *             \2: ACCEPTA ADDRESS                          
0000216C                           594m * MODIFIES  : D0                                            
0000216C                           595m *-----------------------------------------------------------
0000217A  4EF8 2056                596          JMP FINALLY
0000217E                           597      ENDI
0000217E                           598  ; c3d: assig_ 49 - 2 
0000217E                           599m     ASIGN_VALUE_SIMBOL -6, #49
0000217E                           600m * MACRO TO ASSIGN VALUE TO SIMBOL.                          
0000217E                           601m * PARAMETERS: \1: PARAM1   ;DESP                           
0000217E                           602m *             \2: PARAM2   ;VALOR                          
0000217E                           603m * MODIFIES  : D0                                            
0000217E                           604m *-----------------------------------------------------------
00002188                           605  ;   c3d: igual_ 1 2 3 
00002188                           606m     COMP_IGUAL_SIMBOL -4, -6, -8   
00002188                           607m * MACRO TO COMPARE.                          
00002188                           608m * PARAMETERS: \1: PARAM1
00002188                           609m *             \2: PARAM2
00002188                           610m *             \3: PARAM3 
00002188                           611m * MODIFIES  : D0
00002188                           612m *             D1
00002188                           613m *-----------------------------------------------------------
0000218C                           614m * COMPARAR D0 Y D1
00002190                           615m         ; MIRAR QUE D0 ES CORRECTO
000021A0                           616m         ; MIRAR QUE D1 ES CORRECTO
000021AC                           617m * SI SON IGUALES GUARDAR UN 1 (BOOLEAN TRUE)
000021BA                           618m * SI SON DIFERENTES GUARDAR UN 0 (BOOLEAN FALSE)
000021C2                           619  ;   condicional if 
000021C2                           620  ;   c3d: if_ 3 - t_while_0_1 
000021C2  302F FFF8                621      MOVE.W  -8(A7),D0 
000021C6  B07C 0001                622      CMP.W   #1, D0   
000021CA  6700 0006                623      BEQ t_while_0_1   
000021CE                           624  ;   saltar a la etiqueta 
000021CE                           625  ;   c3d: goto_ - - t_while_0_2 
000021CE  6000 00F2                626      BRA t_while_0_2   
000021D2                           627  ;   escribir etiqueta 
000021D2                           628  ;   c3d: skip_ - - t_while_0_1 
000021D2                           629  t_while_0_1:
000021D2                           630  ;   c3d: ramifica_ - - 1 
000021D2  2D3C 000022B8            631      MOVE.L  #t_end_ramifica_1,-(A6)      
000021D8  2D3C 00002292            632      MOVE.L  #t_ramifica_1_3,-(A6)      
000021DE  2D3C 00002268            633      MOVE.L  #t_ramifica_1_2,-(A6)      
000021E4  2D3C 0000224C            634      MOVE.L  #t_ramifica_1_1,-(A6)      
000021EA                           635  ask_1:  
000021EA                           636m     ASK_RAMIF   #1, #3
000021EA                           637m * ESTABLECE SI EL PROGRAMA ESTA EN EL MAIN O EN UNA RAMA     
000021EA                           638m * PARAMETERS:     \1: NUMERO DE RAMIFICACION                
000021EA                           639m *                 \2: NUMERO DE RAMAS                       
000021EA                           640m * MODIFIES  : D0, D1, A1, A2, A3                             
000021EA                           641m *----------------------------------------------------------- 
000021EA                           642m     ; SEPARADOR
000021F4                           643m     ; PREGUNTA P1
0000220C                           644m     ;PREGUNTA P2
00002218                           645m     ; PREGUNTA P3
00002222                           646m     ; SEPARADOR
0000222C                           647      IF.B    D1 <GT> #3 THEN.S
00002232  700D                     648          MOVE.L  #13,D0
00002234  227C 00006101            649          MOVE.L  #novalido,A1
0000223A  4E4F                     650          TRAP    #15
0000223C  60AC                     651          BRA     ask_1
0000223E                           652      ENDI
0000223E  224E                     653      MOVE.L     A6,A1
00002240  5381                     654      SUB.L      #1,D1
00002242  C2FC 0004                655      MULU.W     #4,D1
00002246  D3C1                     656      ADD.L      D1,A1
00002248  2251                     657      MOVE.L     (A1),A1
0000224A  4ED1                     658      JMP        (A1)
0000224C                           659  ;   escribir etiqueta 
0000224C                           660  ;   c3d: skip_ - - t_ramifica_1_1 
0000224C                           661  t_ramifica_1_1:
0000224C                           662  ; c3d: escriure_ 48 - 1 
0000224C                           663m     ASIGN_VALUE_VECTOR #48,continuigenerar_paraula,continuigenerar_paraulacursor
0000224C                           664m * MACRO TO ASSIGN VALUE TO VECTOR.                          
0000224C                           665m * PARAMETERS: \1: VALUE                                    
0000224C                           666m *             \2: VECTOR ADDRESS                           
0000224C                           667m *             \3: CURSOR ADDRESS                           
0000224C                           668m * MODIFIES  : D0,A1                                         
0000224C                           669m *-----------------------------------------------------------
00002264                           670  ;   saltar a la etiqueta 
00002264                           671  ;   c3d: goto_ - - t_end_ramifica_1 
00002264  6000 0052                672      BRA t_end_ramifica_1   
00002268                           673  ;   escribir etiqueta 
00002268                           674  ;   c3d: skip_ - - t_ramifica_1_2 
00002268                           675  t_ramifica_1_2:
00002268                           676  ; c3d: escriure_ 48 - 0 
00002268                           677m     ASIGN_VALUE_VECTOR #48,entprova_generar_paraula,entprova_generar_paraulacursor
00002268                           678m * MACRO TO ASSIGN VALUE TO VECTOR.                          
00002268                           679m * PARAMETERS: \1: VALUE                                    
00002268                           680m *             \2: VECTOR ADDRESS                           
00002268                           681m *             \3: CURSOR ADDRESS                           
00002268                           682m * MODIFIES  : D0,A1                                         
00002268                           683m *-----------------------------------------------------------
00002280                           684  ;   c3d: dreta_ - - 0 
00002280                           685m     DRETA entprova_generar_paraulacursor
00002280                           686m * MACRO TO INCREASE IN 1 WORD THE CURSOR OF THE FILE.       
00002280                           687m * PARAMETERS: \1: VECTOR CURSOR NAME                       
00002280                           688m * MODIFIES  : D0, A1                                        
00002280                           689m *-----------------------------------------------------------
0000228E                           690  ;   saltar a la etiqueta 
0000228E                           691  ;   c3d: goto_ - - t_end_ramifica_1 
0000228E  6000 0028                692      BRA t_end_ramifica_1   
00002292                           693  ;   escribir etiqueta 
00002292                           694  ;   c3d: skip_ - - t_ramifica_1_3 
00002292                           695  t_ramifica_1_3:
00002292                           696  ; c3d: escriure_ 49 - 0 
00002292                           697m     ASIGN_VALUE_VECTOR #49,entprova_generar_paraula,entprova_generar_paraulacursor
00002292                           698m * MACRO TO ASSIGN VALUE TO VECTOR.                          
00002292                           699m * PARAMETERS: \1: VALUE                                    
00002292                           700m *             \2: VECTOR ADDRESS                           
00002292                           701m *             \3: CURSOR ADDRESS                           
00002292                           702m * MODIFIES  : D0,A1                                         
00002292                           703m *-----------------------------------------------------------
000022AA                           704  ;   c3d: dreta_ - - 0 
000022AA                           705m     DRETA entprova_generar_paraulacursor
000022AA                           706m * MACRO TO INCREASE IN 1 WORD THE CURSOR OF THE FILE.       
000022AA                           707m * PARAMETERS: \1: VECTOR CURSOR NAME                       
000022AA                           708m * MODIFIES  : D0, A1                                        
000022AA                           709m *-----------------------------------------------------------
000022B8                           710  ;   escribir etiqueta 
000022B8                           711  ;   c3d: skip_ - - t_end_ramifica_1 
000022B8                           712  t_end_ramifica_1:
000022B8  DDFC 00000010            713      ADD.L   #16,A6
000022BE                           714  ;   saltar a la etiqueta 
000022BE                           715  ;   c3d: goto_ - - t_while_0_0 
000022BE  6000 FE78                716      BRA t_while_0_0   
000022C2                           717  ;   escribir etiqueta 
000022C2                           718  ;   c3d: skip_ - - t_while_0_2 
000022C2                           719  t_while_0_2:
000022C2                           720  ;   c3d:    endProcedure_ - - 1 
000022C2  2E4E                     721      MOVE.L  A6,A7        
000022C4  DFFC 00000012            722      ADD.L   #18, A7  ;nos situamos en PC para volver
000022CA  4E75                     723      RTS
000022CC                           724  
000022CC                           725  
00004000                           726      ORG $4000                                   
00004000                           727  * Put variables and constants here                   
00004000                           728  memoria         ds.l    0                       
00004000= 30 30 00                 729  accepta         dc.b    '00',0                  
00004004                           730                  ds.w     0                      
00004004= 5641 4C4F 5220 4...      731  acceptastr      dc.w    'VALOR DE ACCEPTA: ',0  
00004018                           732  entprova_generar_paraula     ds.l        1024
00005018= 00000000                 733  entprova_generar_paraulacursor     dc.l        0   
0000501C= 72657375 6C746164 ...    734  rentprova_generar_paraula     dc.l        'resultados/ent_prova_generar_paraula.txt',0
00005048                           735  continuigenerar_paraula     ds.l        1024
00006048= 00000000                 736  continuigenerar_paraulacursor     dc.l        0   
0000604C= 72657375 6C746164 ...    737  rcontinuigenerar_paraula     dc.l        'resultados/continui_generar_paraula.txt',0
00006078= 66696C65 732F656E ...    738  ent             dc.l    'files/ent',0
00006088= 52 61 6D 69 66 69 ...    739  linea1          dc.b    'Ramificacion del programa: ',0
000060A4= 53 65 6C 65 63 63 ...    740  linea2          dc.b    'Seleccionar la rama a ejecutar entre 1 y ',0
000060CE= 3A 20 00                 741  dospuntos       dc.b    ': ',0
000060D1= 2D 2D 2D 2D 2D 2D ...    742  separador       dc.b    '-----------------------------------------------',0
00006101= 45 6C 20 6E 75 6D ...    743  novalido        dc.b    'El numero de rama no es valido. Por favor, introduce otro.',0
0000613C                           744      END    START        ; last line of source    

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACCEPTA             4000
ACCEPTASTR          4004
AND_SIMBOL          3ED9
ASIGN_ACCEPTA_SIMBOL  2605
ASIGN_SIMBOL_ACCEPTA  239D
ASIGN_SIMBOL_SIMBOL  2173
ASIGN_SIMBOL_VECTOR  2B8D
ASIGN_VALUE_ACCEPTA  1F0B
ASIGN_VALUE_SIMBOL  1CE1
ASIGN_VALUE_VECTOR  282F
ASK_1               21EA
ASK_RAMIF           420D
BUIDA               39E8
CIM                 374F
COMP_DIF_SIMBOL     329A
COMP_IGUAL_SIMBOL   2EEB
CONTINUIGENERAR_PARAULA  5048
CONTINUIGENERAR_PARAULACURSOR  6048
DESEMPILA           3842
DOSPUNTOS           60CE
DRETA               1111
EMPILA              3645
ENT                 6078
ENTPROVA_GENERAR_PARAULA  4018
ENTPROVA_GENERAR_PARAULACURSOR  5018
ESQUERRA            137B
FINALLY             2056
IGUAL_ASIG_INT_TRUE_9  21BE
IGUAL_INT_FALSO_9   21BA
INIT_VECTOR         E2C
LINEA1              6088
LINEA2              60A4
LOAD_ENT            0
LOAD_STACK          38F8
MEMORIA             4000
NOBUIDA             3C5F
NOVALIDO            6101
OR_SIMBOL           4074
P_GENERAR_PARAULA   210A
P_PROVA_GENERAR_PARAULA  20D2
RCONTINUIGENERAR_PARAULA  604C
READ_SIMBOL         1A79
READ_VECTOR         15E5
RENTPROVA_GENERAR_PARAULA  501C
SAVE_VEC            740
SEPARADOR           60D1
START               2000
T_END_RAMIFICA_1    22B8
T_RAMIFICA_1_1      224C
T_RAMIFICA_1_2      2268
T_RAMIFICA_1_3      2292
T_WHILE_0_0         2138
T_WHILE_0_1         21D2
T_WHILE_0_2         22C2
_00000000           214C
_00000001           2158
_00000002           217E
_00000003           219C
_00000004           21AC
_00000005           223E
_10000000           2018
_10000001           2034
_10000002           203A
_10000003           2050
_10000004           2084
_10000005           209C
_10000006           20B2
_10000007           20CA
